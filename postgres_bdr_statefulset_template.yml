apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "Replicated PostgreSQL BDR template"
    tags: database,postgresql,postgresql-bdr
    iconClass: "icon-postgresql"
  name: postgres-bdr-cluster

objects:

- apiVersion: v1
  kind: Service
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
  spec:
    ports:
      - port: 5432
        name: psql
    clusterIP: None
    selector:
      app: "${APP_NAME}"

- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: "${APP_NAME}"
    labels:
      app: "${APP_NAME}"
  spec:
    serviceName: "${APP_NAME}"
    replicas: 3
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
      spec:
        terminationGracePeriodSeconds: 5
        containers:
        - name: "${APP_NAME}"
          image: gaelrottier/docker-postgres-bdr:v1.1.0
          ports:
          - containerPort: 5432
            name: psql
          volumeMounts:
          - name: "${APP_NAME}"
            mountPath: /var/lib/postgresql/data
          env:
            - name: APP_NAME
              value: ${APP_NAME}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-secret"
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: ${POSTGRES_DB}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "${APP_NAME}-secret"
                  key: POSTGRES_USER
          imagePullPolicy: Always
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 15
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - psql -h 127.0.0.1 -U $POSTGRES_USER -q -d $POSTGRES_DATABASE -c
                'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
        serviceAccount: postgres
        serviceAccountName: postgres
    volumeClaimTemplates:
    - metadata:
        name: "${APP_NAME}"
      spec:
        accessModes:
          - ReadWriteOnce
        # For Minishift
        storageClassName: ""
        resources:
          requests:
            storage: 2Gi

- apiVersion: v1
  kind: Secret
  metadata:
    name: "${APP_NAME}-secret"
    labels:
      app: ${APP_NAME}
  stringData:
    POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    POSTGRES_USER: "${POSTGRES_USER}"

parameters:
  - name: APP_NAME
    value: persee
  - name: POSTGRES_PASSWORD
    description: password used by postgresql bdr
    generate: expression
    from: "[a-z0-9]{16}"
  - name: POSTGRES_DB
    value: persee
  - name: POSTGRES_USER
    description: password used by postgresql bdr
    generate: expression
    from: "[a-z0-9]{16}"
